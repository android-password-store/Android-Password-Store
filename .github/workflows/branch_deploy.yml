on:
  push:
    branches-ignore:
      - master

name: Build debug
jobs:
  generate-debug-build:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:

    - name: Check if relevant files have changed
      uses: actions/github-script@0.9.0
      id: service-changed
      with:
        result-encoding: string
        script: |
          const result = await github.pulls.listFiles({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            pull_number: context.payload.number,
            per_page: 100
          })
          const serviceChanged = result.data.filter(f => f.filename.startsWith("app/") || f.filename.contains("gradle") || f.filename.startsWith(".github")).length > 0
          console.log(serviceChanged)
          return serviceChanged

    - name: Checkout repository
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: actions/checkout@v1

    - name: Decrypt secrets
      run: release/signing-setup.sh "$ENCRYPT_KEY"
      env:
        ENCRYPT_KEY: ${{ secrets.ENCRYPT_KEY }}

    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - name: Generate cache key
      run: ./.github/checksum.sh checksum.txt

    - name: Cache gradle modules
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/modules-2
        key: ${{ runner.os }}-gradlemodules-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlemodules-

    - name: Cache gradle jars
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/jars-3
        key: ${{ runner.os }}-gradlejars-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlejars-

    - name: Cache gradle build
      uses: actions/cache@v1
      with:
        path: ~/.gradle/caches/build-cache-1
        key: ${{ runner.os }}-gradlebuildcache-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlebuildcache-

    - name: Download gradle dependencies
      run: ./gradlew dependencies

    - name: Build debug app
      run: ./gradlew :app:assembleDebug

    - name: Clean secrets
      run: release/signing-cleanup.sh

    - name: Send APK to Telegram
      run: release/deploy-telegram.sh
      env:
        TG_TO: ${{ secrets.TELEGRAM_TO }}
        TG_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TG_FILE: ./app/build/outputs/apk/debug/app-debug.apk
