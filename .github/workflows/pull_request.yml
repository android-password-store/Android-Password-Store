on: [pull_request]

name: Check pull request
jobs:
  test-pr:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [23, 29]
        variant: [freeRelease, nonFreeRelease]
    steps:

    - name: Check if relevant files have changed
      uses: actions/github-script@0.9.0
      id: service-changed
      with:
        result-encoding: string
        script: |
          const result = await github.pulls.listFiles({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            pull_number: context.payload.number,
            per_page: 100
          })
          const serviceChanged = result.data.filter(f => f.filename.startsWith("app/") || f.filename.endsWith("gradle") || f.filename.startsWith(".github/workflows/pull_request.yml") || f.filename.startsWith("gradle") || f.filename.endsWith("properties")).length > 0
          console.log(serviceChanged)
          return serviceChanged

    - name: Checkout repository
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: actions/checkout@v2

    - name: Copy CI gradle.properties
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - name: Generate cache key
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      run: ./.github/checksum.sh checksum.txt

    - name: Cache gradle modules
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches/modules-2
        key: ${{ runner.os }}-gradlemodules-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlemodules-

    - name: Cache gradle jars
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches/jars-3
        key: ${{ runner.os }}-gradlejars-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlejars-

    - name: Cache gradle build
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches/build-cache-1
        key: ${{ runner.os }}-gradlebuildcache-${{ hashFiles('checksum.txt') }}
        restore-keys: |
          ${{ runner.os }}-gradlebuildcache-

    - name: Run unit tests
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      run: ./gradlew test${{ matrix.variant }} lint${{ matrix.variant}} -Dpre-dex=false

    - name: Run instrumentation tests
      if: ${{ steps.service-changed.outputs.result == 'true' }}
      uses: reactivecircus/android-emulator-runner@v2.11.0
      with:
        api-level: ${{ matrix.api-level }}
        target: default
        script: |
          adb shell settings put global animator_duration_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global window_animation_scale 0
          ./gradlew connectedCheck
