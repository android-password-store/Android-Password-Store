on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * 1'

env:
  SENTRY_DSN: 'https://public_key@example.com/project_id'

name: Shadow job
jobs:
  provide-agp-version-matrix:
    runs-on: ubuntu-latest
    outputs:
      agp-versions: ${{ steps.build-agp-matrix.outputs.agp-versions }}
    steps:
      - id: agp-version-finder
        uses: usefulness/agp-version-finder-action@90844048a634a3fef57d3deba3cfe697f6fb001e # v1
      - id: build-agp-matrix
        run: echo 'agp-versions=["${{ steps.agp-version-finder.outputs.latest-stable }}", "${{ steps.agp-version-finder.outputs.latest-beta }}","${{ steps.agp-version-finder.outputs.latest-alpha }}"]' >> $GITHUB_OUTPUT

  shadow-job:
    needs: [provide-agp-version-matrix]
    strategy:
      fail-fast: false
      matrix:
        agp-version: ${{ fromJSON(needs.provide-agp-version-matrix.outputs.agp-versions) }}
        gradle-version:
          - wrapper
          - release-nightly
          - nightly
        java-version:
          - 18
    runs-on: ubuntu-latest
    name: Run Gradle-${{ matrix.gradle-version }}, AGP-${{ matrix.agp-version }}, Java-${{ matrix.java-version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@83b7061638ee4956cf7545a6f7efe594e5ad0247 # v3.5.1
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
      with:
        distribution: temurin
        java-version: ${{ matrix.java-version }}

    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - name: Workaround AGP 8.x deprecations
      if: startsWith(matrix.agp-version, '8.')
      run: sed -i 's/android.disableAutomaticComponentCreation=true//' gradle.properties

    - name: Run checks
      uses: gradle/gradle-build-action@6095a76664413da4c8c134ee32e8a8ae900f0f1f # v2.4.0
      env:
        DEP_OVERRIDE: true
        DEP_OVERRIDE_agp: ${{ matrix.agp-version }}
      with:
        arguments: check
        gradle-version: ${{ matrix.gradle-version }}
        gradle-home-cache-cleanup: true
        cache-read-only: true

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs: [shadow-job]
    steps:
    - name: Report failure to healthchecks.io
      # see https://stackoverflow.com/a/67532120/4907315
      if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
      run: curl --retry 3 "https://hc-ping.com/${HC_PING_SLUG}/fail"
      env:
        HC_PING_SLUG: ${{ secrets.HC_PING_SLUG }}

    - name: Report success to healthchecks.io
      if: ${{ contains(needs.*.result, 'success') }}
      env:
        HC_PING_SLUG: ${{ secrets.HC_PING_SLUG }}
      run: curl --retry 3 "https://hc-ping.com/${HC_PING_SLUG}"
